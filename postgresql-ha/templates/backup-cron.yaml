apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-incremental-backup
spec:
  schedule: "*/2 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: pg-incremental-backup
            image: ubuntu:20.04
            env:
            - name: PGPASSWORD
              value: pgpass
            - name: AZURE_STORAGE_ACCOUNT
              valueFrom:
                secretKeyRef:
                  name: stg-acc-secret
                  key: AZCOPY_ACCOUNT_NAME
            - name: AZURE_STORAGE_KEY
              valueFrom:
                secretKeyRef:
                  name: stg-acc-secret
                  key: AZCOPY_ACCOUNT_KEY
            volumeMounts:
            - name: backup-data
              mountPath: /backup
            command: 
            - /bin/bash
            - -c
            - |

              set -e  # Exit on error
              export DEBIAN_FRONTEND=noninteractive

              # --- CONFIGURABLE VARIABLES ---

              # PostgreSQL
              POSTGRES_USER="postgres"
              POSTGRES_DB="postgres"
              BACKUP_DIR="/backup"
              BACKUP_FILE="$BACKUP_DIR/pg_backup_$(date +%Y%m%d_%H%M%S).sql"

              # Azure Blob Storage (Account Key-based Auth)
              AZCOPY_BIN="/usr/bin/azcopy"
              AZURE_CONTAINER_NAME="pgsql-backups"

              # --- SYSTEM SETUP ---

              # Ensure dependencies
              apt update -y
              apt install -y wget tar curl ca-certificates postgresql-common gnupg

              # Install AzCopy if not already
              if ! command -v azcopy &> /dev/null; then
                  echo "Installing AzCopy..."
                  wget -q https://aka.ms/downloadazcopy-v10-linux -O /tmp/azcopy.tar.gz
                  tar -xvzf /tmp/azcopy.tar.gz -C /tmp
                  mv /tmp/azcopy_linux_amd64_*/azcopy "$AZCOPY_BIN"
                  chmod +x "$AZCOPY_BIN"
              fi

              echo "Installing PostgreSQL..."

              yes "" | /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh
              install -d /usr/share/postgresql-common/pgdg
              curl -o /usr/share/postgresql-common/pgdg/apt.postgresql.org.asc --fail https://www.postgresql.org/media/keys/ACCC4CF8.asc

              . /etc/os-release
              sh -c "echo 'deb [signed-by=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc] https://apt.postgresql.org/pub/repos/apt $VERSION_CODENAME-pgdg main' > /etc/apt/sources.list.d/pgdg.list"
              
              apt update
              apt -y install postgresql
              echo "PostgreSQL Installed!"


              # Ensure backup directory exists
              mkdir -p "$BACKUP_DIR"

              # --- DATABASE BACKUP ---

              echo "Backing up PostgreSQL database: $POSTGRES_DB"
              pg_basebackup -h postgresql-ha-pgpool.default.svc.cluster.local -p 5432 -D "$BACKUP_DIR"

              # --- AZCOPY LOGIN USING STORAGE KEY ---

              echo "Logging in to Azure Storage using Storage Account Key..."
              export AZCOPY_ACCOUNT_NAME="$AZURE_STORAGE_ACCOUNT"
              export AZCOPY_ACCOUNT_KEY="$AZURE_STORAGE_KEY"

              # --- UPLOAD TO BLOB STORAGE ---

              echo "Uploading backup to Azure Blob Storage..."
              "$AZCOPY_BIN" copy "$BACKUP_DIR" "https://$AZURE_STORAGE_ACCOUNT.blob.core.windows.net/$AZURE_CONTAINER_NAME/$(basename "$BACKUP_FILE")"

              # --- CLEANUP ---

              echo "Cleaning up..."
              rm -f "$BACKUP_DIR"

              echo "Backup and upload completed successfully at $(date)"

              

          volumes:
          - name: backup-data
            emptyDir: {}
